import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";

;
import { IShoppingCartCommodity } from "../../../../api/structures/IShoppingCartCommodity";

;
@Controller("/shopping/carts/:customerId/commodities")
export class ShoppingCartsCommoditiesController {
    /**
     * Adds a single product (by snapshot) and specific option choices to the given customer's cart. Handles inventory validation, quantity, and creates a pending cartCommodity. Option selections are validated according to the snapshot options/rules.
     *
     * @param customerId Unique identifier of the customer who owns the cart.
     * @param body Adds a single product (by snapshot) and specific option choices to the given customer's cart. Handles inventory validation, quantity, and creates a pending cartCommodity. Option selections are validated according to the snapshot options/rules.
     * @nestia Generated by Nestia - https://github.com/samchon/nestia
    */
    @TypedRoute.Post()
    public async postByCustomerid(
    @TypedParam("customerId")
    customerId: string & tags.Format<"uuid">, 
    @TypedBody()
    body: IShoppingCartCommodity.ICreate): Promise<IShoppingCartCommodity> {
        customerId;
        body;
        return typia.random<IShoppingCartCommodity>();
    }
}
