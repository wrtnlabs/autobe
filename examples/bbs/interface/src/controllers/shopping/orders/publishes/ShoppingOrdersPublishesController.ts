import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";

;
import { IShoppingOrderPublish } from "../../../../api/structures/IShoppingOrderPublish";

;
@Controller("/shopping/orders/:orderId/publishes")
export class ShoppingOrdersPublishesController {
    /**
     * Handles payment application for a given order, including cash, deposit, mileage, coupons, and asynchronous (virtual account) methods. Records payment details and changes order state. Used for both payment and cancellation workflows.
     *
     * @param orderId Unique identifier of the order.
     * @param body Handles payment application for a given order, including cash, deposit, mileage, coupons, and asynchronous (virtual account) methods. Records payment details and changes order state. Used for both payment and cancellation workflows.
     * @nestia Generated by Nestia - https://github.com/samchon/nestia
    */
    @TypedRoute.Post()
    public async postByOrderid(
    @TypedParam("orderId")
    orderId: string & tags.Format<"uuid">, 
    @TypedBody()
    body: IShoppingOrderPublish.ICreate): Promise<IShoppingOrderPublish> {
        orderId;
        body;
        return typia.random<IShoppingOrderPublish>();
    }
}
